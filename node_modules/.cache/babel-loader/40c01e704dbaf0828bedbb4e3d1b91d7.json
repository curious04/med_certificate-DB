{"ast":null,"code":"/**\n * This method enhances a base object which would normally contain data, with\n * methods from another object that might work on manipulating that data.\n * All the added methods are set as non enumerable, non configurable, and non\n * writable properties. This ensures that if we try to clone or stringify the\n * base object, we don't have to worry about these additional methods.\n * @private\n * @param {object} baseObject - Base object with data\n * @param {object} methodsObject - Object with methods as properties. The key\n * values used here will be the same that will be defined on the baseObject.\n */\nexport default function enhanceWithMethods(baseObject, methodsObject) {\n  // @ts-expect-error\n  return Object.keys(methodsObject).reduce(function (enhancedObject, methodName) {\n    Object.defineProperty(enhancedObject, methodName, {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: methodsObject[methodName]\n    });\n    return enhancedObject;\n  }, baseObject);\n}","map":{"version":3,"names":["enhanceWithMethods","baseObject","methodsObject","Object","keys","reduce","enhancedObject","methodName","defineProperty","enumerable","configurable","writable","value"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/node_modules/contentful-management/dist/es-modules/enhance-with-methods.js"],"sourcesContent":["/**\n * This method enhances a base object which would normally contain data, with\n * methods from another object that might work on manipulating that data.\n * All the added methods are set as non enumerable, non configurable, and non\n * writable properties. This ensures that if we try to clone or stringify the\n * base object, we don't have to worry about these additional methods.\n * @private\n * @param {object} baseObject - Base object with data\n * @param {object} methodsObject - Object with methods as properties. The key\n * values used here will be the same that will be defined on the baseObject.\n */\nexport default function enhanceWithMethods(baseObject, methodsObject) {\n  // @ts-expect-error\n  return Object.keys(methodsObject).reduce(function (enhancedObject, methodName) {\n    Object.defineProperty(enhancedObject, methodName, {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: methodsObject[methodName]\n    });\n    return enhancedObject;\n  }, baseObject);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,kBAAkBA,CAACC,UAAU,EAAEC,aAAa,EAAE;EACpE;EACA,OAAOC,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,MAAM,CAAC,UAAUC,cAAc,EAAEC,UAAU,EAAE;IAC7EJ,MAAM,CAACK,cAAc,CAACF,cAAc,EAAEC,UAAU,EAAE;MAChDE,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAEV,aAAa,CAACK,UAAU;IACjC,CAAC,CAAC;IACF,OAAOD,cAAc;EACvB,CAAC,EAAEL,UAAU,CAAC;AAChB"},"metadata":{},"sourceType":"module"}