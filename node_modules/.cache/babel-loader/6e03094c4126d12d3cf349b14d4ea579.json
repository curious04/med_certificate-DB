{"ast":null,"code":"var _excluded = [\"url\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { createRequestConfig } from 'contentful-sdk-core';\nimport entities from './entities';\n\n/**\n * @private\n */\nexport default function createClientApi(makeRequest) {\n  var _entities$space = entities.space,\n    wrapSpace = _entities$space.wrapSpace,\n    wrapSpaceCollection = _entities$space.wrapSpaceCollection;\n  var wrapUser = entities.user.wrapUser;\n  var _entities$personalAcc = entities.personalAccessToken,\n    wrapPersonalAccessToken = _entities$personalAcc.wrapPersonalAccessToken,\n    wrapPersonalAccessTokenCollection = _entities$personalAcc.wrapPersonalAccessTokenCollection;\n  var _entities$organizatio = entities.organization,\n    wrapOrganization = _entities$organizatio.wrapOrganization,\n    wrapOrganizationCollection = _entities$organizatio.wrapOrganizationCollection;\n  var wrapUsageCollection = entities.usage.wrapUsageCollection;\n  return {\n    /**\n     * Gets all spaces\n     * @return Promise for a collection of Spaces\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaces()\n     * .then((response) => console.log(response.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaces: function getSpaces() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return makeRequest({\n        entityType: 'Space',\n        action: 'getMany',\n        params: {\n          query: createRequestConfig({\n            query: query\n          }).params\n        }\n      }).then(function (data) {\n        return wrapSpaceCollection(makeRequest, data);\n      });\n    },\n    /**\n     * Gets a space\n     * @param spaceId - Space ID\n     * @return Promise for a Space\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpace('<space_id>')\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    getSpace: function getSpace(spaceId) {\n      return makeRequest({\n        entityType: 'Space',\n        action: 'get',\n        params: {\n          spaceId: spaceId\n        }\n      }).then(function (data) {\n        return wrapSpace(makeRequest, data);\n      });\n    },\n    /**\n     * Creates a space\n     * @param spaceData - Object representation of the Space to be created\n     * @param organizationId - Organization ID, if the associated token can manage more than one organization.\n     * @return Promise for the newly created Space\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createSpace({\n     *   name: 'Name of new space'\n     * })\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    createSpace: function createSpace(spaceData, organizationId) {\n      return makeRequest({\n        entityType: 'Space',\n        action: 'create',\n        params: {\n          organizationId: organizationId\n        },\n        payload: spaceData\n      }).then(function (data) {\n        return wrapSpace(makeRequest, data);\n      });\n    },\n    /**\n     * Gets an organization\n     * @param  id - Organization ID\n     * @return Promise for a Organization\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganization('<org_id>')\n     * .then((org) => console.log(org))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganization: function getOrganization(id) {\n      return makeRequest({\n        entityType: 'Organization',\n        action: 'get',\n        params: {\n          organizationId: id\n        }\n      }).then(function (data) {\n        return wrapOrganization(makeRequest, data);\n      });\n    },\n    /**\n     * Gets a collection of Organizations\n     * @return Promise for a collection of Organizations\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizations()\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizations: function getOrganizations() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return makeRequest({\n        entityType: 'Organization',\n        action: 'getMany',\n        params: {\n          query: createRequestConfig({\n            query: query\n          }).params\n        }\n      }).then(function (data) {\n        return wrapOrganizationCollection(makeRequest, data);\n      });\n    },\n    /**\n     * Gets the authenticated user\n     * @return Promise for a User\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getCurrentUser()\n     * .then(user => console.log(user.firstName))\n     * .catch(console.error)\n     * ```\n     */\n    getCurrentUser: function getCurrentUser(params) {\n      return makeRequest({\n        entityType: 'User',\n        action: 'getCurrent',\n        params: params\n      }).then(function (data) {\n        return wrapUser(makeRequest, data);\n      });\n    },\n    /**\n     * Creates a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createPersonalAccessToken(\n     *  {\n     *    \"name\": \"My Token\",\n     *    \"scope\": [\n     *      \"content_management_manage\"\n     *    ]\n     *  }\n     * )\n     * .then(personalAccessToken => console.log(personalAccessToken.token))\n     * .catch(console.error)\n     * ```\n     */\n    createPersonalAccessToken: function createPersonalAccessToken(data) {\n      return makeRequest({\n        entityType: 'PersonalAccessToken',\n        action: 'create',\n        params: {},\n        payload: data\n      }).then(function (response) {\n        return wrapPersonalAccessToken(makeRequest, response);\n      });\n    },\n    /**\n     * Gets a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessToken(tokenId)\n     * .then(token => console.log(token.token))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessToken: function getPersonalAccessToken(tokenId) {\n      return makeRequest({\n        entityType: 'PersonalAccessToken',\n        action: 'get',\n        params: {\n          tokenId: tokenId\n        }\n      }).then(function (data) {\n        return wrapPersonalAccessToken(makeRequest, data);\n      });\n    },\n    /**\n     * Gets all personal access tokens\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessTokens()\n     * .then(response => console.log(reponse.items))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessTokens: function getPersonalAccessTokens() {\n      return makeRequest({\n        entityType: 'PersonalAccessToken',\n        action: 'getMany',\n        params: {}\n      }).then(function (data) {\n        return wrapPersonalAccessTokenCollection(makeRequest, data);\n      });\n    },\n    /**\n     * Get organization usage grouped by {@link UsageMetricEnum metric}\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * @example ```javascript\n     *\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizationUsage('<organizationId>', {\n     *    'metric[in]': 'cma,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2019-11-10'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizationUsage: function getOrganizationUsage(organizationId) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return makeRequest({\n        entityType: 'Usage',\n        action: 'getManyForOrganization',\n        params: {\n          organizationId: organizationId,\n          query: query\n        }\n      }).then(function (data) {\n        return wrapUsageCollection(makeRequest, data);\n      });\n    },\n    /**\n     * Get organization usage grouped by space and metric\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaceUsage('<organizationId>', {\n     *    skip: 0,\n     *    limit: 10,\n     *    'metric[in]': 'cda,cpa,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2020-11-30'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaceUsage: function getSpaceUsage(organizationId) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return makeRequest({\n        entityType: 'Usage',\n        action: 'getManyForSpace',\n        params: {\n          organizationId: organizationId,\n          query: query\n        }\n      }).then(function (data) {\n        return wrapUsageCollection(makeRequest, data);\n      });\n    },\n    /**\n     * Make a custom request to the Contentful management API's /spaces endpoint\n     * @param opts - axios request options (https://github.com/mzabriskie/axios)\n     * @return Promise for the response data\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.rawRequest({\n     *   method: 'GET',\n     *   url: '/custom/path'\n     * })\n     * .then((responseData) => console.log(responseData))\n     * .catch(console.error)\n     * ```\n     */\n    rawRequest: function rawRequest(_ref) {\n      var url = _ref.url,\n        config = _objectWithoutProperties(_ref, _excluded);\n      return makeRequest({\n        entityType: 'Http',\n        action: 'request',\n        params: {\n          url: url,\n          config: config\n        }\n      });\n    }\n  };\n}","map":{"version":3,"names":["_excluded","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","createRequestConfig","entities","createClientApi","makeRequest","_entities$space","space","wrapSpace","wrapSpaceCollection","wrapUser","user","_entities$personalAcc","personalAccessToken","wrapPersonalAccessToken","wrapPersonalAccessTokenCollection","_entities$organizatio","organization","wrapOrganization","wrapOrganizationCollection","wrapUsageCollection","usage","getSpaces","query","arguments","undefined","entityType","action","params","then","data","getSpace","spaceId","createSpace","spaceData","organizationId","payload","getOrganization","id","getOrganizations","getCurrentUser","createPersonalAccessToken","response","getPersonalAccessToken","tokenId","getPersonalAccessTokens","getOrganizationUsage","getSpaceUsage","rawRequest","_ref","url","config"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/node_modules/contentful-management/dist/es-modules/create-contentful-api.js"],"sourcesContent":["var _excluded = [\"url\"];\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createRequestConfig } from 'contentful-sdk-core';\nimport entities from './entities';\n\n/**\n * @private\n */\nexport default function createClientApi(makeRequest) {\n  var _entities$space = entities.space,\n      wrapSpace = _entities$space.wrapSpace,\n      wrapSpaceCollection = _entities$space.wrapSpaceCollection;\n  var wrapUser = entities.user.wrapUser;\n  var _entities$personalAcc = entities.personalAccessToken,\n      wrapPersonalAccessToken = _entities$personalAcc.wrapPersonalAccessToken,\n      wrapPersonalAccessTokenCollection = _entities$personalAcc.wrapPersonalAccessTokenCollection;\n  var _entities$organizatio = entities.organization,\n      wrapOrganization = _entities$organizatio.wrapOrganization,\n      wrapOrganizationCollection = _entities$organizatio.wrapOrganizationCollection;\n  var wrapUsageCollection = entities.usage.wrapUsageCollection;\n  return {\n    /**\n     * Gets all spaces\n     * @return Promise for a collection of Spaces\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaces()\n     * .then((response) => console.log(response.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaces: function getSpaces() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return makeRequest({\n        entityType: 'Space',\n        action: 'getMany',\n        params: {\n          query: createRequestConfig({\n            query: query\n          }).params\n        }\n      }).then(function (data) {\n        return wrapSpaceCollection(makeRequest, data);\n      });\n    },\n\n    /**\n     * Gets a space\n     * @param spaceId - Space ID\n     * @return Promise for a Space\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpace('<space_id>')\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    getSpace: function getSpace(spaceId) {\n      return makeRequest({\n        entityType: 'Space',\n        action: 'get',\n        params: {\n          spaceId: spaceId\n        }\n      }).then(function (data) {\n        return wrapSpace(makeRequest, data);\n      });\n    },\n\n    /**\n     * Creates a space\n     * @param spaceData - Object representation of the Space to be created\n     * @param organizationId - Organization ID, if the associated token can manage more than one organization.\n     * @return Promise for the newly created Space\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createSpace({\n     *   name: 'Name of new space'\n     * })\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    createSpace: function createSpace(spaceData, organizationId) {\n      return makeRequest({\n        entityType: 'Space',\n        action: 'create',\n        params: {\n          organizationId: organizationId\n        },\n        payload: spaceData\n      }).then(function (data) {\n        return wrapSpace(makeRequest, data);\n      });\n    },\n\n    /**\n     * Gets an organization\n     * @param  id - Organization ID\n     * @return Promise for a Organization\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganization('<org_id>')\n     * .then((org) => console.log(org))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganization: function getOrganization(id) {\n      return makeRequest({\n        entityType: 'Organization',\n        action: 'get',\n        params: {\n          organizationId: id\n        }\n      }).then(function (data) {\n        return wrapOrganization(makeRequest, data);\n      });\n    },\n\n    /**\n     * Gets a collection of Organizations\n     * @return Promise for a collection of Organizations\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizations()\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizations: function getOrganizations() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return makeRequest({\n        entityType: 'Organization',\n        action: 'getMany',\n        params: {\n          query: createRequestConfig({\n            query: query\n          }).params\n        }\n      }).then(function (data) {\n        return wrapOrganizationCollection(makeRequest, data);\n      });\n    },\n\n    /**\n     * Gets the authenticated user\n     * @return Promise for a User\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getCurrentUser()\n     * .then(user => console.log(user.firstName))\n     * .catch(console.error)\n     * ```\n     */\n    getCurrentUser: function getCurrentUser(params) {\n      return makeRequest({\n        entityType: 'User',\n        action: 'getCurrent',\n        params: params\n      }).then(function (data) {\n        return wrapUser(makeRequest, data);\n      });\n    },\n\n    /**\n     * Creates a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createPersonalAccessToken(\n     *  {\n     *    \"name\": \"My Token\",\n     *    \"scope\": [\n     *      \"content_management_manage\"\n     *    ]\n     *  }\n     * )\n     * .then(personalAccessToken => console.log(personalAccessToken.token))\n     * .catch(console.error)\n     * ```\n     */\n    createPersonalAccessToken: function createPersonalAccessToken(data) {\n      return makeRequest({\n        entityType: 'PersonalAccessToken',\n        action: 'create',\n        params: {},\n        payload: data\n      }).then(function (response) {\n        return wrapPersonalAccessToken(makeRequest, response);\n      });\n    },\n\n    /**\n     * Gets a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessToken(tokenId)\n     * .then(token => console.log(token.token))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessToken: function getPersonalAccessToken(tokenId) {\n      return makeRequest({\n        entityType: 'PersonalAccessToken',\n        action: 'get',\n        params: {\n          tokenId: tokenId\n        }\n      }).then(function (data) {\n        return wrapPersonalAccessToken(makeRequest, data);\n      });\n    },\n\n    /**\n     * Gets all personal access tokens\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessTokens()\n     * .then(response => console.log(reponse.items))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessTokens: function getPersonalAccessTokens() {\n      return makeRequest({\n        entityType: 'PersonalAccessToken',\n        action: 'getMany',\n        params: {}\n      }).then(function (data) {\n        return wrapPersonalAccessTokenCollection(makeRequest, data);\n      });\n    },\n\n    /**\n     * Get organization usage grouped by {@link UsageMetricEnum metric}\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * @example ```javascript\n     *\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizationUsage('<organizationId>', {\n     *    'metric[in]': 'cma,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2019-11-10'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizationUsage: function getOrganizationUsage(organizationId) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return makeRequest({\n        entityType: 'Usage',\n        action: 'getManyForOrganization',\n        params: {\n          organizationId: organizationId,\n          query: query\n        }\n      }).then(function (data) {\n        return wrapUsageCollection(makeRequest, data);\n      });\n    },\n\n    /**\n     * Get organization usage grouped by space and metric\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaceUsage('<organizationId>', {\n     *    skip: 0,\n     *    limit: 10,\n     *    'metric[in]': 'cda,cpa,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2020-11-30'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaceUsage: function getSpaceUsage(organizationId) {\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return makeRequest({\n        entityType: 'Usage',\n        action: 'getManyForSpace',\n        params: {\n          organizationId: organizationId,\n          query: query\n        }\n      }).then(function (data) {\n        return wrapUsageCollection(makeRequest, data);\n      });\n    },\n\n    /**\n     * Make a custom request to the Contentful management API's /spaces endpoint\n     * @param opts - axios request options (https://github.com/mzabriskie/axios)\n     * @return Promise for the response data\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.rawRequest({\n     *   method: 'GET',\n     *   url: '/custom/path'\n     * })\n     * .then((responseData) => console.log(responseData))\n     * .catch(console.error)\n     * ```\n     */\n    rawRequest: function rawRequest(_ref) {\n      var url = _ref.url,\n          config = _objectWithoutProperties(_ref, _excluded);\n\n      return makeRequest({\n        entityType: 'Http',\n        action: 'request',\n        params: {\n          url: url,\n          config: config\n        }\n      });\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}