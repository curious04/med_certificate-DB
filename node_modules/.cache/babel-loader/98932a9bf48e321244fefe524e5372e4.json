{"ast":null,"code":"import * as contentfulManagement from 'contentful-management';\nimport { ACCESS_TOKEN_MANAGEMENT, CONTENT_TYPE, ENVIRONMENT, SPACE_ID } from './utils';\nconst clientManagement = contentfulManagement.createClient({\n  accessToken: ACCESS_TOKEN_MANAGEMENT\n});\nexport function createEntry(payload) {\n  return clientManagement.getSpace(SPACE_ID).then(space => space.getEnvironment(ENVIRONMENT)).then(environment => environment.createEntry(CONTENT_TYPE, bodyTransformer(payload))).then(entry => entry.publish()).catch(err => {\n    console.error(err);\n  });\n}\nexport function updateEntry(id, payload) {\n  return clientManagement.getSpace(SPACE_ID).then(space => space.getEnvironment(ENVIRONMENT)).then(environment => environment.getEntry(id)).then(entry => {\n    entry.fields = bodyTransformer(payload).fields;\n    return entry.update();\n  }).then(entry => entry.publish()).then(entry => console.log(`Entry ${entry.sys.id} updated.`)).catch(console.error);\n}\nfunction bodyTransformer(payload) {\n  const entries = Object.entries(payload);\n  let fields = {};\n  entries.forEach(([key, value]) => {\n    fields[key] = {\n      'en-US': value\n    };\n  });\n  return {\n    fields\n  };\n}\nexport function deleteEntry(id) {\n  return clientManagement.getSpace(SPACE_ID).then(space => space.getEnvironment(ENVIRONMENT)).then(environment => environment.getEntry(id)).then(entry => entry.unpublish()).then(entry => entry.delete()).then(() => console.log('Entry deleted.')).catch(console.error);\n}","map":{"version":3,"names":["contentfulManagement","ACCESS_TOKEN_MANAGEMENT","CONTENT_TYPE","ENVIRONMENT","SPACE_ID","clientManagement","createClient","accessToken","createEntry","payload","getSpace","then","space","getEnvironment","environment","bodyTransformer","entry","publish","catch","err","console","error","updateEntry","id","getEntry","fields","update","log","sys","entries","Object","forEach","key","value","deleteEntry","unpublish","delete"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/src/Contenedores/Workers/sdk/managementAPI.js"],"sourcesContent":["import * as contentfulManagement from 'contentful-management';\n\nimport {\n  ACCESS_TOKEN_MANAGEMENT,\n  CONTENT_TYPE,\n  ENVIRONMENT,\n  SPACE_ID,\n} from './utils';\n\nconst clientManagement = contentfulManagement.createClient({\n  accessToken: ACCESS_TOKEN_MANAGEMENT,\n});\n\nexport function createEntry(payload) {\n  return clientManagement\n    .getSpace(SPACE_ID)\n    .then((space) => space.getEnvironment(ENVIRONMENT))\n    .then((environment) =>\n      environment.createEntry(CONTENT_TYPE, bodyTransformer(payload))\n    )\n    .then((entry) => entry.publish())\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nexport function updateEntry(id, payload) {\n  return clientManagement\n    .getSpace(SPACE_ID)\n    .then((space) => space.getEnvironment(ENVIRONMENT))\n    .then((environment) => environment.getEntry(id))\n    .then((entry) => {\n      entry.fields = bodyTransformer(payload).fields;\n      return entry.update();\n    })\n    .then((entry) => entry.publish())\n    .then((entry) => console.log(`Entry ${entry.sys.id} updated.`))\n    .catch(console.error);\n}\n\nfunction bodyTransformer(payload) {\n  const entries = Object.entries(payload);\n  let fields = {};\n  entries.forEach(([key, value]) => {\n    fields[key] = {\n      'en-US': value,\n    };\n  });\n  return { fields };\n}\n\nexport function deleteEntry(id) {\n  return clientManagement\n    .getSpace(SPACE_ID)\n    .then((space) => space.getEnvironment(ENVIRONMENT))\n    .then((environment) => environment.getEntry(id))\n    .then((entry) => entry.unpublish())\n    .then((entry) => entry.delete())\n    .then(() => console.log('Entry deleted.'))\n    .catch(console.error);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,oBAAoB,MAAM,uBAAuB;AAE7D,SACEC,uBAAuB,EACvBC,YAAY,EACZC,WAAW,EACXC,QAAQ,QACH,SAAS;AAEhB,MAAMC,gBAAgB,GAAGL,oBAAoB,CAACM,YAAY,CAAC;EACzDC,WAAW,EAAEN;AACf,CAAC,CAAC;AAEF,OAAO,SAASO,WAAWA,CAACC,OAAO,EAAE;EACnC,OAAOJ,gBAAgB,CACpBK,QAAQ,CAACN,QAAQ,CAAC,CAClBO,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACV,WAAW,CAAC,CAAC,CAClDQ,IAAI,CAAEG,WAAW,IAChBA,WAAW,CAACN,WAAW,CAACN,YAAY,EAAEa,eAAe,CAACN,OAAO,CAAC,CAChE,CAAC,CACAE,IAAI,CAAEK,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB,CAAC,CAAC;AACN;AAEA,OAAO,SAASG,WAAWA,CAACC,EAAE,EAAEd,OAAO,EAAE;EACvC,OAAOJ,gBAAgB,CACpBK,QAAQ,CAACN,QAAQ,CAAC,CAClBO,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACV,WAAW,CAAC,CAAC,CAClDQ,IAAI,CAAEG,WAAW,IAAKA,WAAW,CAACU,QAAQ,CAACD,EAAE,CAAC,CAAC,CAC/CZ,IAAI,CAAEK,KAAK,IAAK;IACfA,KAAK,CAACS,MAAM,GAAGV,eAAe,CAACN,OAAO,CAAC,CAACgB,MAAM;IAC9C,OAAOT,KAAK,CAACU,MAAM,CAAC,CAAC;EACvB,CAAC,CAAC,CACDf,IAAI,CAAEK,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAChCN,IAAI,CAAEK,KAAK,IAAKI,OAAO,CAACO,GAAG,CAAE,SAAQX,KAAK,CAACY,GAAG,CAACL,EAAG,WAAU,CAAC,CAAC,CAC9DL,KAAK,CAACE,OAAO,CAACC,KAAK,CAAC;AACzB;AAEA,SAASN,eAAeA,CAACN,OAAO,EAAE;EAChC,MAAMoB,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACpB,OAAO,CAAC;EACvC,IAAIgB,MAAM,GAAG,CAAC,CAAC;EACfI,OAAO,CAACE,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IAChCR,MAAM,CAACO,GAAG,CAAC,GAAG;MACZ,OAAO,EAAEC;IACX,CAAC;EACH,CAAC,CAAC;EACF,OAAO;IAAER;EAAO,CAAC;AACnB;AAEA,OAAO,SAASS,WAAWA,CAACX,EAAE,EAAE;EAC9B,OAAOlB,gBAAgB,CACpBK,QAAQ,CAACN,QAAQ,CAAC,CAClBO,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAACV,WAAW,CAAC,CAAC,CAClDQ,IAAI,CAAEG,WAAW,IAAKA,WAAW,CAACU,QAAQ,CAACD,EAAE,CAAC,CAAC,CAC/CZ,IAAI,CAAEK,KAAK,IAAKA,KAAK,CAACmB,SAAS,CAAC,CAAC,CAAC,CAClCxB,IAAI,CAAEK,KAAK,IAAKA,KAAK,CAACoB,MAAM,CAAC,CAAC,CAAC,CAC/BzB,IAAI,CAAC,MAAMS,OAAO,CAACO,GAAG,CAAC,gBAAgB,CAAC,CAAC,CACzCT,KAAK,CAACE,OAAO,CAACC,KAAK,CAAC;AACzB"},"metadata":{},"sourceType":"module"}