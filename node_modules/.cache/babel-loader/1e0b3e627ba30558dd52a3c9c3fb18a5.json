{"ast":null,"code":"import copy from 'fast-copy';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport createOrganizationApi from '../create-organization-api';\nimport { wrapCollection } from '../common-utils';\n\n/**\n * This method creates the API for the given organization with all the methods for\n * reading and creating other entities. It also passes down a clone of the\n * http client with an organization id, so the base path for requests now has the\n * organization id already set.\n * @private\n * @param makeRequest - function to make requests via an adapter\n * @param data - API response for an Organization\n * @return {Organization}\n */\nexport function wrapOrganization(makeRequest, data) {\n  var org = toPlainObject(copy(data));\n  var orgApi = createOrganizationApi(makeRequest);\n  var enhancedOrganization = enhanceWithMethods(org, orgApi);\n  return freezeSys(enhancedOrganization);\n}\n/**\n * This method normalizes each organization in a collection.\n * @private\n */\n\nexport var wrapOrganizationCollection = wrapCollection(wrapOrganization);","map":{"version":3,"names":["copy","freezeSys","toPlainObject","enhanceWithMethods","createOrganizationApi","wrapCollection","wrapOrganization","makeRequest","data","org","orgApi","enhancedOrganization","wrapOrganizationCollection"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/node_modules/contentful-management/dist/es-modules/entities/organization.js"],"sourcesContent":["import copy from 'fast-copy';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport createOrganizationApi from '../create-organization-api';\nimport { wrapCollection } from '../common-utils';\n\n/**\n * This method creates the API for the given organization with all the methods for\n * reading and creating other entities. It also passes down a clone of the\n * http client with an organization id, so the base path for requests now has the\n * organization id already set.\n * @private\n * @param makeRequest - function to make requests via an adapter\n * @param data - API response for an Organization\n * @return {Organization}\n */\nexport function wrapOrganization(makeRequest, data) {\n  var org = toPlainObject(copy(data));\n  var orgApi = createOrganizationApi(makeRequest);\n  var enhancedOrganization = enhanceWithMethods(org, orgApi);\n  return freezeSys(enhancedOrganization);\n}\n/**\n * This method normalizes each organization in a collection.\n * @private\n */\n\nexport var wrapOrganizationCollection = wrapCollection(wrapOrganization);"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,SAASC,SAAS,EAAEC,aAAa,QAAQ,qBAAqB;AAC9D,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,SAASC,cAAc,QAAQ,iBAAiB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,WAAW,EAAEC,IAAI,EAAE;EAClD,IAAIC,GAAG,GAAGP,aAAa,CAACF,IAAI,CAACQ,IAAI,CAAC,CAAC;EACnC,IAAIE,MAAM,GAAGN,qBAAqB,CAACG,WAAW,CAAC;EAC/C,IAAII,oBAAoB,GAAGR,kBAAkB,CAACM,GAAG,EAAEC,MAAM,CAAC;EAC1D,OAAOT,SAAS,CAACU,oBAAoB,CAAC;AACxC;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,0BAA0B,GAAGP,cAAc,CAACC,gBAAgB,CAAC"},"metadata":{},"sourceType":"module"}