{"ast":null,"code":"import * as raw from './raw';\nexport var getForSpace = function getForSpace(http, params) {\n  return raw.get(http, \"/spaces/\".concat(params.spaceId, \"/users/\").concat(params.userId));\n};\nexport var getCurrent = function getCurrent(http, params) {\n  return raw.get(http, \"/users/me\", {\n    params: params === null || params === void 0 ? void 0 : params.query\n  });\n};\nexport var getManyForSpace = function getManyForSpace(http, params) {\n  return raw.get(http, \"/spaces/\".concat(params.spaceId, \"/users\"), {\n    params: params.query\n  });\n};\nexport var getForOrganization = function getForOrganization(http, params) {\n  return raw.get(http, \"/organizations/\".concat(params.organizationId, \"/users/\").concat(params.userId));\n};\nexport var getManyForOrganization = function getManyForOrganization(http, params) {\n  return raw.get(http, \"/organizations/\".concat(params.organizationId, \"/users\"), {\n    params: params.query\n  });\n};","map":{"version":3,"names":["raw","getForSpace","http","params","get","concat","spaceId","userId","getCurrent","query","getManyForSpace","getForOrganization","organizationId","getManyForOrganization"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/node_modules/contentful-management/dist/es-modules/adapters/REST/endpoints/user.js"],"sourcesContent":["import * as raw from './raw';\nexport var getForSpace = function getForSpace(http, params) {\n  return raw.get(http, \"/spaces/\".concat(params.spaceId, \"/users/\").concat(params.userId));\n};\nexport var getCurrent = function getCurrent(http, params) {\n  return raw.get(http, \"/users/me\", {\n    params: params === null || params === void 0 ? void 0 : params.query\n  });\n};\nexport var getManyForSpace = function getManyForSpace(http, params) {\n  return raw.get(http, \"/spaces/\".concat(params.spaceId, \"/users\"), {\n    params: params.query\n  });\n};\nexport var getForOrganization = function getForOrganization(http, params) {\n  return raw.get(http, \"/organizations/\".concat(params.organizationId, \"/users/\").concat(params.userId));\n};\nexport var getManyForOrganization = function getManyForOrganization(http, params) {\n  return raw.get(http, \"/organizations/\".concat(params.organizationId, \"/users\"), {\n    params: params.query\n  });\n};"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,OAAO;AAC5B,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC1D,OAAOH,GAAG,CAACI,GAAG,CAACF,IAAI,EAAE,UAAU,CAACG,MAAM,CAACF,MAAM,CAACG,OAAO,EAAE,SAAS,CAAC,CAACD,MAAM,CAACF,MAAM,CAACI,MAAM,CAAC,CAAC;AAC1F,CAAC;AACD,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAACN,IAAI,EAAEC,MAAM,EAAE;EACxD,OAAOH,GAAG,CAACI,GAAG,CAACF,IAAI,EAAE,WAAW,EAAE;IAChCC,MAAM,EAAEA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACM;EACjE,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACR,IAAI,EAAEC,MAAM,EAAE;EAClE,OAAOH,GAAG,CAACI,GAAG,CAACF,IAAI,EAAE,UAAU,CAACG,MAAM,CAACF,MAAM,CAACG,OAAO,EAAE,QAAQ,CAAC,EAAE;IAChEH,MAAM,EAAEA,MAAM,CAACM;EACjB,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,IAAIE,kBAAkB,GAAG,SAASA,kBAAkBA,CAACT,IAAI,EAAEC,MAAM,EAAE;EACxE,OAAOH,GAAG,CAACI,GAAG,CAACF,IAAI,EAAE,iBAAiB,CAACG,MAAM,CAACF,MAAM,CAACS,cAAc,EAAE,SAAS,CAAC,CAACP,MAAM,CAACF,MAAM,CAACI,MAAM,CAAC,CAAC;AACxG,CAAC;AACD,OAAO,IAAIM,sBAAsB,GAAG,SAASA,sBAAsBA,CAACX,IAAI,EAAEC,MAAM,EAAE;EAChF,OAAOH,GAAG,CAACI,GAAG,CAACF,IAAI,EAAE,iBAAiB,CAACG,MAAM,CAACF,MAAM,CAACS,cAAc,EAAE,QAAQ,CAAC,EAAE;IAC9ET,MAAM,EAAEA,MAAM,CAACM;EACjB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}