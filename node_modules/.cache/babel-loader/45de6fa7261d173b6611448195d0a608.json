{"ast":null,"code":"import { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport copy from 'fast-copy';\nimport { wrapCollection } from '../common-utils';\nimport createSpaceApi from '../create-space-api';\nimport enhanceWithMethods from '../enhance-with-methods';\n\n/**\n * This method creates the API for the given space with all the methods for\n * reading and creating other entities. It also passes down a clone of the\n * http client with a space id, so the base path for requests now has the\n * space id already set.\n * @private\n * @param makeRequest - function to make requests via an adapter\n * @param data - API response for a Space\n * @return {Space}\n */\nexport function wrapSpace(makeRequest, data) {\n  var space = toPlainObject(copy(data));\n  var spaceApi = createSpaceApi(makeRequest);\n  var enhancedSpace = enhanceWithMethods(space, spaceApi);\n  return freezeSys(enhancedSpace);\n}\n/**\n * This method wraps each space in a collection with the space API. See wrapSpace\n * above for more details.\n * @private\n */\n\nexport var wrapSpaceCollection = wrapCollection(wrapSpace);","map":{"version":3,"names":["freezeSys","toPlainObject","copy","wrapCollection","createSpaceApi","enhanceWithMethods","wrapSpace","makeRequest","data","space","spaceApi","enhancedSpace","wrapSpaceCollection"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/node_modules/contentful-management/dist/es-modules/entities/space.js"],"sourcesContent":["import { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport copy from 'fast-copy';\nimport { wrapCollection } from '../common-utils';\nimport createSpaceApi from '../create-space-api';\nimport enhanceWithMethods from '../enhance-with-methods';\n\n/**\n * This method creates the API for the given space with all the methods for\n * reading and creating other entities. It also passes down a clone of the\n * http client with a space id, so the base path for requests now has the\n * space id already set.\n * @private\n * @param makeRequest - function to make requests via an adapter\n * @param data - API response for a Space\n * @return {Space}\n */\nexport function wrapSpace(makeRequest, data) {\n  var space = toPlainObject(copy(data));\n  var spaceApi = createSpaceApi(makeRequest);\n  var enhancedSpace = enhanceWithMethods(space, spaceApi);\n  return freezeSys(enhancedSpace);\n}\n/**\n * This method wraps each space in a collection with the space API. See wrapSpace\n * above for more details.\n * @private\n */\n\nexport var wrapSpaceCollection = wrapCollection(wrapSpace);"],"mappings":"AAAA,SAASA,SAAS,EAAEC,aAAa,QAAQ,qBAAqB;AAC9D,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAOC,kBAAkB,MAAM,yBAAyB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,WAAW,EAAEC,IAAI,EAAE;EAC3C,IAAIC,KAAK,GAAGR,aAAa,CAACC,IAAI,CAACM,IAAI,CAAC,CAAC;EACrC,IAAIE,QAAQ,GAAGN,cAAc,CAACG,WAAW,CAAC;EAC1C,IAAII,aAAa,GAAGN,kBAAkB,CAACI,KAAK,EAAEC,QAAQ,CAAC;EACvD,OAAOV,SAAS,CAACW,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,mBAAmB,GAAGT,cAAc,CAACG,SAAS,CAAC"},"metadata":{},"sourceType":"module"}