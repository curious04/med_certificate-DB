{"ast":null,"code":"import copy from 'fast-copy';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport createEnvironmentApi from '../create-environment-api';\nimport { wrapCollection } from '../common-utils';\n\n/**\n * This method creates the API for the given environment with all the methods for\n * reading and creating other entities. It also passes down a clone of the\n * http client with a environment id, so the base path for requests now has the\n * environment id already set.\n * @private\n * @param makeRequest - function to make requests via an adapter\n * @param data - API response for a Environment\n * @return\n */\nexport function wrapEnvironment(makeRequest, data) {\n  // do not pollute generated typings\n  var environment = toPlainObject(copy(data));\n  var environmentApi = createEnvironmentApi(makeRequest);\n  var enhancedEnvironment = enhanceWithMethods(environment, environmentApi);\n  return freezeSys(enhancedEnvironment);\n}\n/**\n * This method wraps each environment in a collection with the environment API. See wrapEnvironment\n * above for more details.\n * @private\n */\n\nexport var wrapEnvironmentCollection = wrapCollection(wrapEnvironment);","map":{"version":3,"names":["copy","freezeSys","toPlainObject","enhanceWithMethods","createEnvironmentApi","wrapCollection","wrapEnvironment","makeRequest","data","environment","environmentApi","enhancedEnvironment","wrapEnvironmentCollection"],"sources":["C:/Users/hrith/OneDrive/Desktop/medcertificates-main/node_modules/contentful-management/dist/es-modules/entities/environment.js"],"sourcesContent":["import copy from 'fast-copy';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport createEnvironmentApi from '../create-environment-api';\nimport { wrapCollection } from '../common-utils';\n\n/**\n * This method creates the API for the given environment with all the methods for\n * reading and creating other entities. It also passes down a clone of the\n * http client with a environment id, so the base path for requests now has the\n * environment id already set.\n * @private\n * @param makeRequest - function to make requests via an adapter\n * @param data - API response for a Environment\n * @return\n */\nexport function wrapEnvironment(makeRequest, data) {\n  // do not pollute generated typings\n  var environment = toPlainObject(copy(data));\n  var environmentApi = createEnvironmentApi(makeRequest);\n  var enhancedEnvironment = enhanceWithMethods(environment, environmentApi);\n  return freezeSys(enhancedEnvironment);\n}\n/**\n * This method wraps each environment in a collection with the environment API. See wrapEnvironment\n * above for more details.\n * @private\n */\n\nexport var wrapEnvironmentCollection = wrapCollection(wrapEnvironment);"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,SAASC,SAAS,EAAEC,aAAa,QAAQ,qBAAqB;AAC9D,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,SAASC,cAAc,QAAQ,iBAAiB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,WAAW,EAAEC,IAAI,EAAE;EACjD;EACA,IAAIC,WAAW,GAAGP,aAAa,CAACF,IAAI,CAACQ,IAAI,CAAC,CAAC;EAC3C,IAAIE,cAAc,GAAGN,oBAAoB,CAACG,WAAW,CAAC;EACtD,IAAII,mBAAmB,GAAGR,kBAAkB,CAACM,WAAW,EAAEC,cAAc,CAAC;EACzE,OAAOT,SAAS,CAACU,mBAAmB,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,yBAAyB,GAAGP,cAAc,CAACC,eAAe,CAAC"},"metadata":{},"sourceType":"module"}